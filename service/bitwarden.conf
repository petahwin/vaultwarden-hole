events {
}

# Nginx owns port 80
http {
  # This will redirect requests for http://pi.hole[:<80|443>] over to pi.hole admin page
  # The pi.hole admin page owns port 8000
  server {
    listen 80;
    listen [::]:80;
    server_name pi.hole;
    return 301 http://$host:8000$request_uri;
  }

  server {
    listen 443;
    listen [::]:443;
    server_name pi.hole;
    return 301 http://$host$request_uri;
  }

  # This will redirect requests for http://bitwarden.hole[:80] over to https://bitwarden.hole[:443]
  server {
    listen 80;
    listen [::]:80;
    server_name bitwarden.hole;
    return 301 https://$host$request_uri;
  }

  # Do not allow using the hostname or any IP address to resolve [:443] requests
  server {
    listen 443;
    listen [::]:443;
    server_name $hostname ~\d+\.\d+\.\d+\.\d+;

    return 403;
  }
  
  # Handles [:443] requests as well as redirected requests from the above config
  # Nginx owns port 443
  server {
    listen 443 default_server ssl http2;
    server_name bitwarden.hole;
    ssl_certificate /etc/ssl/certs/bitwarden.hole.crt;
    ssl_certificate_key /etc/ssl/private/bitwarden.hole.key;
  
    ssl_dhparam /etc/ssl/certs/dhparam.pem;
  
    client_max_body_size 128M;
  
    location / {
      proxy_pass http://0.0.0.0:8080;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  
    location /notifications/hub {
      proxy_pass http://0.0.0.0:3012;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  
    location /notifications/hub/negotiate {
      proxy_pass http://0.0.0.0:8080;
    }
  }
}
